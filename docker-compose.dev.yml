services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-smart_accounts}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Django Backend - using pre-built Python image with volume mount
  backend:
    image: python:3.11.9-slim
    working_dir: /app
    command: >
      bash -c "
      apt-get update && apt-get install -y --no-install-recommends gcc postgresql-client poppler-utils libjpeg-dev zlib1g-dev libmagic1 libmagic-dev curl ca-certificates && 
      pip install --no-cache-dir Django==4.2.16 djangorestframework==3.16.0 psycopg2-binary==2.9.10 django-cors-headers==4.7.0 uvicorn==0.27.0 gunicorn==23.0.0 whitenoise==6.7.0 python-dotenv==1.1.1 PyJWT==2.9.0 drf-yasg==1.21.10 celery==5.4.0 redis==5.2.1 openai==1.51.2 pillow==11.3.0 requests==2.32.4 stripe==12.3.0 &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      uvicorn backend.asgi:application --host 0.0.0.0 --port 8000 --reload
      "
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-smart_accounts}
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - PORT=8000
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
      - ./backend/staticfiles:/app/staticfiles

volumes:
  db_data:
