version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-smart_accounts}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  # Django Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             uvicorn backend.asgi:application --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-smart_accounts}
      - DEBUG=True
      - PORT=8000
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
      - ./backend/staticfiles:/app/staticfiles

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.minimal
      args:
        REACT_APP_API_URL: http://localhost:8000/api/v1
        REACT_APP_API_TIMEOUT: 10000
        REACT_APP_TOKEN_REFRESH_THRESHOLD: 300000
        REACT_APP_APP_NAME: "Smart Accounting"
        REACT_APP_VERSION: "1.0.0"
        REACT_APP_DEBUG: false
    ports:
      - "3000:80"
    depends_on:
      - backend
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules

volumes:
  db_data: